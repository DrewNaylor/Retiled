<!-- RetiledSearch - Windows Phone 8.0-like Search app for the
                     Retiled project.
Copyright (C) 2021 Drew Naylor
(Note that the copyright years include the years left out by the hyphen.)
Windows Phone and all other related copyrights and trademarks are property
of Microsoft Corporation. All rights reserved.

This file is a part of the Retiled project.
Neither Retiled nor Drew Naylor are associated with Microsoft
and Microsoft does not endorse Retiled.
Any other copyrights and trademarks belong to their
respective people and companies/organizations.


  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. -->




<!-- TODO: It might be a good idea to figure out a way to reference 
styles in libraries so that they can be easily shared in
all the Retiled programs. -->

<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Design.PreviewWith>
        <Border Padding="20">
			<WrapPanel>
				<TextBox Text="Search term" Classes="RetiledFlatTextbox" Height="10" Margin="10"/>
				<Button Content="search" Classes="RetiledFlatButton" Height="35"/>
			</WrapPanel>
		</Border>
    </Design.PreviewWith>

	
	<Style Selector="Button.RetiledFlatButton /template/ ContentPresenter">
		<!-- This part makes regular rectangular buttons look like
		the Windows Phone buttons. -->
		<Setter Property="CornerRadius" Value="0" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="Black"/>
		<Setter Property="BorderBrush" Value="White"/>
	</Style>

	<Style Selector="Button.RetiledFlatButton:pressed /template/ ContentPresenter">
		<!-- Changes the button background color to Cobalt when it's
		pressed, which is the same behavior as Windows Phone. -->
		<Setter Property="Background" Value="#0050ef"/>
	</Style>


	<Style Selector="TextBox.RetiledFlatTextbox /template/ Border">
		<!-- This style makes the textbox borders look like
		Windows Phone textboxes. -->
		<Setter Property="CornerRadius" Value="0"/>
		<Setter Property="BorderThickness" Value="0" />
		<!-- WindowSpy says the background for an unfocused
		textbox is #CCCCCC. I got really close to the closest
		websafe alternative of #D6D6D6 using "LightGray", so
		I figured I could just use the same color. -->
		<Setter Property="Background" Value="#CCCCCC"/>
		<Setter Property="BorderBrush" Value="#0050ef"/>
	</Style>

	<Style Selector="TextBox.RetiledFlatTextbox:focus /template/ Border">
		<!-- Change the style when the textbox is focused.
		I'd prefer to have the border go inside the textbox
		like Windows Phone, but I don't really know how to do
		that yet.
		It appears that the border thickness on 
		WP8.1 is more than 1 (maybe 2 or 4?), but if I
		change it to that, the textbox size changes
		unless the textbox has a size specified,
		either by margins or by width and height
		values. -->
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="Background" Value="White"/>
		<Setter Property="BorderBrush" Value="#0050ef"/>
		<!-- Setting the margin to 0 prevents the textbox from
		changing its size, which is good because that makes it
		behave more like Windows Phone. -->
		<Setter Property="Margin" Value="0"/>
	</Style>

	<Style Selector="TextBox.RetiledFlatTextbox">
		<!-- This style makes the textboxes look a little better. -->
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="Foreground" Value="Black"/>
		<!-- SelectionForegroundBrush is the text color when
		it's being selected. -->
		<Setter Property="SelectionForegroundBrush" Value="White"/>
		<!-- SelectionBrush is the highlight color. 
		Avalonia's Fluent theme file is really useful for
		finding out the available properties:
		https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/TextBox.xaml -->
		<Setter Property="SelectionBrush" Value="#0050ef"/>
		<!-- Insertion point color. -->
		<Setter Property="CaretBrush" Value="Black"/>
	</Style>
	
	<Style Selector="TextBox.RetiledFlatTextbox#PART_Watermark">
		<!-- The default watermark opacity isn't quite enough. -->
		<Setter Property="Opacity" Value="1"/>
	</Style>
		
	
</Styles>
