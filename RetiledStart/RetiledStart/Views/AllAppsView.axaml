<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="360" d:DesignHeight="720"
             x:Class="RetiledStart.Views.AllAppsView">
	<UserControl.Styles>
		<!-- Temporarily import styles so that there's an
		idea of what they look like. -->
		<StyleInclude Source="avares://RetiledStart/Styles/RoundButton.axaml" />
		</UserControl.Styles>
  <Grid Margin="0,10,0,0" ColumnDefinitions="30,*">
	  
	  <StackPanel Margin="10">
		  <!-- Margin has to be in the StackPanel or it looks weird. -->
	  <Button Classes="RetiledRoundButton" HorizontalAlignment="Center"
			  VerticalAlignment="Top"
			  Grid.Column="0" Width="30" Height="30" Content="S">
		  <!-- Temporarily using "S" instead of a magnifying glass. -->
	  </Button>

	  <Button Classes="RetiledRoundButton" HorizontalAlignment="Center"
			  VerticalAlignment="Top"
			  Margin="10"
			  Grid.Column="0" Width="30" Height="30" Content="Bk"
			  Command="{Binding $parent[Window].DataContext.GoBackToTiles}">
		  <!-- Temporary Back button to easily go back to the tiles
		  until there's support for an actual navigation bar.
		  Using a left arrow isn't allowed in XAML, so it's just "Bk". -->
		  <!-- For some reason, the Margin has to be here as well,
		  otherwise spacing doesn't look right for both sidebar buttons. -->
	  </Button>
		  </StackPanel>

	  <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
		  <!-- This StackPanel ensures the width of the ItemsRepeater is restricted so the
		  scrollbar will be visible when combined with binding the ItemsRepeater width to
		  the window's width. -->
		<StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Background="Black" Width="50">
			<!-- Binding the ItemsRepeater width to the window's width makes sure the scrollbar
			is visible, as mentioned above. This is binding to Window rather than UserControl, and it
			seems to work just like it did before using an ItemsRepeater. -->
		  <ItemsRepeater Items="{Binding GetDotDesktopFiles}"
						 Background="Black"
						 HorizontalAlignment="Left" VerticalAlignment="Top" Width="{Binding $parent[Window].Width}">
			  <ItemsRepeater.Layout>
				  <StackLayout Spacing="0" Orientation="Vertical"/>
			  </ItemsRepeater.Layout>
		      <ItemsRepeater.ItemTemplate>
				  <DataTemplate>
					  <!-- Binding to a command in an ItemsRepeater DataTemplate requires adding
					  "$parent[ItemsRepeater].DataContext."	before your command you want to bind to.
					  Found this SO answer which helped: https://stackoverflow.com/a/66838883 -->
					  <Button Command="{Binding $parent[ItemsRepeater].DataContext.RunApp}" CommandParameter="{Binding}"
							  Padding="0,5" Classes="RetiledAllAppsEntry_Button" Height="60" HorizontalAlignment="Stretch">
						  <!-- HorizontalAlignment="Stretch" ensures you can click or tap on the buttons
						  from anyware, rather than just on the text. -->
						  <StackPanel Height="55" Margin="0,5" Classes="RetiledAllAppsEntry_StackPanel" Orientation="Horizontal" Spacing="10">
							  <Rectangle Classes="RetiledAllAppsEntry_Rectangle" Height="50" Width="50"/>
							  <!-- MSDN says App List icons are 44x44 with 6x6 pixels of padding:
							  https://docs.microsoft.com/en-us/previous-versions/windows/apps/hh781198(v=win.10)?redirectedfrom=MSDN -->
							  <TextBlock Classes="RetiledAllAppsEntry_TextBlock" 
										 Text="{Binding,
										 Converter={StaticResource AppListItemTextConverter},
										 ConverterParameter=Binding}" TextTrimming="CharacterEllipsis" FontSize="20"/>
							  <!-- A converter is necessary to get the text from the file. 
							  https://stackoverflow.com/a/11104834
							  https://docs.microsoft.com/en-us/windows/winui/api/microsoft.ui.xaml.data.ivalueconverter?view=winui-3.0 -->
						  </StackPanel>
					  </Button>
				  </DataTemplate>
			  </ItemsRepeater.ItemTemplate>
		  </ItemsRepeater>
		</StackPanel>
	  </ScrollViewer>
  </Grid>
</UserControl>